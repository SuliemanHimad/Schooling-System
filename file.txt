<template>
  <div>
    <h2>Update Student</h2>
    <form @submit.prevent="updateStudent">
      <input
        v-model="studentId"
        value="studentId"
        type="text"
        placeholder="Student ID"
      />
      <input v-model="student.full_name" type="text" placeholder="Full Name" />
      <input v-model="student.grade" type="text" placeholder="Grade" />
      <input v-model="student.subjects" type="text" placeholder="Subjects" />
      <input v-model="student.address" type="text" placeholder="Address" />
      <button type="submit">Update</button>
    </form>
    <p v-if="message">{{ message }}</p>
  </div>
</template>

<!-- haaaa -->
<!-- halmar  -->

<style scoped>
div {
  max-width: 400px;
  margin: 0 auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
  margin-bottom: 20px;
}

form {
  display: flex;
  flex-direction: column;
}

input {
  margin-bottom: 10px;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  padding: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

p {
  text-align: center;
  color: green;
  margin-top: 10px;
}
</style>

<script>
import axios from "axios";

export default {
  data() {
    return {
      studentId: this.$route.params.studentId,
      student: {},
      message: "",
    };
  },
  mounted() {
    this.fetchStudent();
  },
  methods: {
    async fetchStudent() {
      try {
        const response = await axios.get(
          `http://127.0.0.1:8004/api/method/school.school.doctype.students.api.get_student?student_id=${this.studentId}`,
          {
            headers: {
              Authorization: "token c0ffbab7720767b:2e2eeafbb9f149c",
            },
          }
        );
        this.student = response.data.message;
      } catch (error) {
        console.error(error);
      }
    },
    async updateStudent() {
      try {
        // Add your custom validation here.
        alert(this.studentId);
        // Make the API call to update the student.
        // Replace the URL with your actual API endpoint.
        // Add any additional headers required for authentication.
        const response = await axios.post(
          `http://127.0.0.1:8004/api/method/school.school.doctype.students.api.update_student`,
          {
            student_id: this.studentId,
            ...this.student,
            //
          },
          {
            headers: {
              Authorization: "token c0ffbab7720767b:2e2eeafbb9f149c",
            },
          }
        );
        this.message = response.data.message;
      } catch (error) {
        console.error(error);
        this.message = "Error updating student.";
      }
    },
  },
};
</script>
